version: "3"

services:
  php5.6:
    restart: always
    container_name: php5.6
    build: ./php5.6
    ports:
      - 9000
    environment:
      - TZ:${TZ}
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ./php5.6/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - es_net
  php7.0:
    restart: always
    container_name: php7.0
    build: ./php7.0
    ports:
      - 9000
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ./php7.0/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - es_net
  php7.1:
    restart: always
    container_name: php7.1
    build: ./php7.1
    ports:
      - 9000
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ./php7.1/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - es_net
  php7.2:
    restart: always
    container_name: php7.2
    build: ./php7.2
    ports:
      - 9000
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ./php7.2/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - es_net
  php7.3:
    restart: always
    container_name: php7.3
    build: ./php7.3
    ports:
      - 8888:8888
      - 9000:9000
      - 9501:9501
      - 9502:9502
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ./php7.3/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./php7.3/conf.d/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - es_net
  nginx:
    restart: always
    container_name: nginx
    build: ./nginx
    ports:
      - ${DOCKER_NGINX_PORT}:80
    env_file:
      - ./.env
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${DOCKER_PROJECT_DIR}:/var/www
      - ${DOCKER_NGINX_LOG_DIR}:/var/log/nginx
    depends_on:
      - php5.6
      - php7.0
      - php7.1
      - php7.2
      - php7.3
      - mysql
    networks:
      - es_net
  mysql:
    restart: always
    container_name: mysql
    build: ./mysql
    ports:
      - ${DOCKER_MYSQL_PORT}:3306
    env_file:
      - ./.env
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${DOCKER_MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${DOCKER_MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DOCKER_MYSQL_CONFIG_DIR}:/etc/mysql/conf.d
      - ${DOCKER_MYSQL_DATA}:/var/lib/mysql
      - ${DOCKER_MYSQL_LOG}:/var/log/mysql
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--default_authentication_plugin=mysql_native_password"
    ]
    networks:
        - es_net
  redis:
    restart: always
    container_name: redis
    build: ./redis
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_REDIS_DATA}:/data
    ports:
      - ${DOCKER_REDIS_PORT}:6379
    networks:
      - es_net
  memcache:
    restart: always
    container_name: memcache
    build: ./memcache
    env_file:
      - ./.env
    volumes:
      - ${DOCKER_MEMCACHE_DATA}:/var/lib/memcached
    ports:
      - ${DOCKER_MEMCACHE_PORT}:11211
    networks:
      - es_net
  mongo:
    restart: always
    container_name: mongo
    build: ./mongo
    env_file:
      - ./.env
    volumes:
      - mongo_data:/data/db
    ports:
      - ${DOCKER_MONGO_PORT}:27017
    networks:
      - es_net
  rabbitmq:
    restart: always
    container_name: rabbitmq
    build: ./rabbitmq
    env_file:
      - ./.env
    environment:
      - RABBITMQ_DEFAULT_USER=${DOCKER_RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${DOCKER_RABBITMQ_DEFAULT_PASS}
    ports:
      - ${DOCKER_RABBITMQ_HOST_PORT}:5672
      - ${DOCKER_RABBITMQ_HTTP_PORT}:15672
      - ${DOCKER_RABBITMQ_HTTPS_PORT}:15671
    volumes:
      - ${DOCKER_RABBITMQ_DATA}:/var/lib/rabbitmq/mnesia
    networks:
      - es_net
  es_master:
    restart: always
    container_name: es_master
    privileged: true
    build: ./elasticsearch
    env_file:
      - ./.env
    environment:
      - TZ=${TZ}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${DOCKER_ES_MASTER_DATA}:/usr/share/elasticsearch/data
      - ${DOCKER_ES_MASTER_CONFIG}:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${DOCKER_ES_MASTER_LOG}:/usr/share/elasticsearch/logs
      - ${DOCKER_ES_MASTER_IK_CONFIG}:/usr/share/elasticsearch/config/analysis-ik/IKAnalyzer.cfg.xml
      - ${DOCKER_ES_MASTER_IK_DIC}:/usr/share/elasticsearch/config/analysis-ik/custom/my.dic
    ports:
      - ${DOCKER_ES_MASTER_HOST_HTTP_PORT}:9200
    networks:
      - es_net
  es_slave:
    restart: always
    container_name: es_slave
    privileged: true
    build: ./elasticsearch
    env_file:
      - ./.env
    environment:
      - TZ=${TZ}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${DOCKER_ES_SLAVE_DATA}:/usr/share/elasticsearch/data
      - ${DOCKER_ES_SLAVE_CONFIG}:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${DOCKER_ES_SLAVE_LOG}:/usr/share/elasticsearch/logs
    ports:
      - ${DOCKER_ES_SLAVE_HOST_HTTP_PORT}:9200
    links:
      - es_master
    networks:
      - es_net
  es_head:
    restart: always
    container_name: es_head
    build: ./es_head
    env_file:
      - ./.env
    ports:
      - ${DOCKER_ES_HEAD_PORT}:9100
  kibana:
    restart: always
    container_name: kibana
    build: ./kibana
    env_file:
      - ./.env
    ports:
      - ${DOCKER_KIBANA_PORT}:5601
    depends_on:
      - es_master
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_URL=http://es_master:9200
      - XPACK_MONITORING_ENABLED=true
    networks:
      - es_net
  jaeger:
    restart: always
    container_name: jaeger
    build: ./jaeger
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 14250:14250
      - 14268:14268
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
    networks:
      - es_net
volumes:
  mongo_data:
networks:
  es_net:
    driver: bridge

